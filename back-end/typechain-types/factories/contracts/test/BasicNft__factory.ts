/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicNft,
  BasicNftInterface,
} from "../../../contracts/test/BasicNft";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "DogMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908161008c91906102fc565b50806001908161009c91906102fc565b50505060006006819055506103ce565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012d57607f821691505b6020821081036101405761013f6100e6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261016b565b6101b2868361016b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101f96101f46101ef846101ca565b6101d4565b6101ca565b9050919050565b6000819050919050565b610213836101de565b61022761021f82610200565b848454610178565b825550505050565b600090565b61023c61022f565b61024781848461020a565b505050565b5b8181101561026b57610260600082610234565b60018101905061024d565b5050565b601f8211156102b05761028181610146565b61028a8461015b565b81016020851015610299578190505b6102ad6102a58561015b565b83018261024c565b50505b505050565b600082821c905092915050565b60006102d3600019846008026102b5565b1980831691505092915050565b60006102ec83836102c2565b9150826002028217905092915050565b610305826100ac565b67ffffffffffffffff81111561031e5761031d6100b7565b5b6103288254610115565b61033382828561026f565b600060209050601f8311600181146103665760008415610354578287015190505b61035e85826102e0565b8655506103c6565b601f19841661037486610146565b60005b8281101561039c57848901518255600182019150602085019450602081019050610377565b868310156103b957848901516103b5601f8916826102c2565b8355505b6001600288020188555050505b505050505050565b611d6f806103dd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102d3578063e985e9c51461030357610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906114fc565b610333565b60405161012c9190611544565b60405180910390f35b61013d610415565b60405161014a91906115ef565b60405180910390f35b61016d60048036038101906101689190611647565b6104a7565b60405161017a91906116b5565b60405180910390f35b61019d600480360381019061019891906116fc565b6104c3565b005b6101b960048036038101906101b4919061173c565b6104d9565b005b6101d560048036038101906101d0919061173c565b6105db565b005b6101f160048036038101906101ec9190611647565b6105fb565b6040516101fe91906116b5565b60405180910390f35b61020f61060d565b60405161021c919061179e565b60405180910390f35b61023f600480360381019061023a91906117b9565b610617565b60405161024c919061179e565b60405180910390f35b61025d6106d1565b60405161026a91906115ef565b60405180910390f35b61027b6106ed565b60405161028891906115ef565b60405180910390f35b6102ab60048036038101906102a69190611812565b61077f565b005b6102c760048036038101906102c29190611987565b610795565b005b6102d16107ba565b005b6102ed60048036038101906102e89190611647565b61080c565b6040516102fa91906115ef565b60405180910390f35b61031d60048036038101906103189190611a0a565b610876565b60405161032a9190611544565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103fe57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061040e575061040d8261090a565b5b9050919050565b60606000805461042490611a79565b80601f016020809104026020016040519081016040528092919081815260200182805461045090611a79565b801561049d5780601f106104725761010080835404028352916020019161049d565b820191906000526020600020905b81548152906001019060200180831161048057829003601f168201915b5050505050905090565b60006104b282610974565b506104bc826109fc565b9050919050565b6104d582826104d0610a39565b610a41565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361054b5760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161054291906116b5565b60405180910390fd5b600061055f838361055a610a39565b610a53565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d5578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105cc93929190611aaa565b60405180910390fd5b50505050565b6105f683838360405180602001604052806000815250610795565b505050565b600061060682610974565b9050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361068a5760006040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161068191906116b5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b604051806080016040528060578152602001611ce36057913981565b6060600180546106fc90611a79565b80601f016020809104026020016040519081016040528092919081815260200182805461072890611a79565b80156107755780601f1061074a57610100808354040283529160200191610775565b820191906000526020600020905b81548152906001019060200180831161075857829003601f168201915b5050505050905090565b61079161078a610a39565b8383610c6d565b5050565b6107a08484846104d9565b6107b46107ab610a39565b85858585610ddc565b50505050565b6107c633600654610f8d565b6006547fef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d60405160405180910390a260016006546108049190611b10565b600681905550565b606061081782610fab565b610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90611bb6565b60405180910390fd5b604051806080016040528060578152602001611ce3605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061098083610fec565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109f357826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016109ea919061179e565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610a4e8383836001611029565b505050565b600080610a5f84610fec565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610aa157610aa08184866111ee565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610b3257610ae3600085600080611029565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610bb5576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cde57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610cd591906116b5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610dcf9190611544565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115610f86578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610e3b9493929190611c2b565b6020604051808303816000875af1925050508015610e7757506040513d601f19601f82011682018060405250810190610e749190611c8c565b60015b610efb573d8060008114610ea7576040519150601f19603f3d011682016040523d82523d6000602084013e610eac565b606091505b506000815103610ef357836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610eea91906116b5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610f8457836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610f7b91906116b5565b60405180910390fd5b505b5050505050565b610fa78282604051806020016040528060008152506112b2565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff16610fcd83610fec565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806110625750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561119657600061107284610974565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156110dd57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156110f057506110ee8184610876565b155b1561113257826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161112991906116b5565b60405180910390fd5b811561119457838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6111f98383836112d6565b6112ad57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361126e57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611265919061179e565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016112a4929190611cb9565b60405180910390fd5b505050565b6112bc8383611397565b6112d16112c7610a39565b6000858585610ddc565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561138e57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061134f575061134e8484610876565b5b8061138d57508273ffffffffffffffffffffffffffffffffffffffff16611375836109fc565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114095760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161140091906116b5565b60405180910390fd5b600061141783836000610a53565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461148b5760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161148291906116b5565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d9816114a4565b81146114e457600080fd5b50565b6000813590506114f6816114d0565b92915050565b6000602082840312156115125761151161149a565b5b6000611520848285016114e7565b91505092915050565b60008115159050919050565b61153e81611529565b82525050565b60006020820190506115596000830184611535565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561159957808201518184015260208101905061157e565b60008484015250505050565b6000601f19601f8301169050919050565b60006115c18261155f565b6115cb818561156a565b93506115db81856020860161157b565b6115e4816115a5565b840191505092915050565b6000602082019050818103600083015261160981846115b6565b905092915050565b6000819050919050565b61162481611611565b811461162f57600080fd5b50565b6000813590506116418161161b565b92915050565b60006020828403121561165d5761165c61149a565b5b600061166b84828501611632565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061169f82611674565b9050919050565b6116af81611694565b82525050565b60006020820190506116ca60008301846116a6565b92915050565b6116d981611694565b81146116e457600080fd5b50565b6000813590506116f6816116d0565b92915050565b600080604083850312156117135761171261149a565b5b6000611721858286016116e7565b925050602061173285828601611632565b9150509250929050565b6000806000606084860312156117555761175461149a565b5b6000611763868287016116e7565b9350506020611774868287016116e7565b925050604061178586828701611632565b9150509250925092565b61179881611611565b82525050565b60006020820190506117b3600083018461178f565b92915050565b6000602082840312156117cf576117ce61149a565b5b60006117dd848285016116e7565b91505092915050565b6117ef81611529565b81146117fa57600080fd5b50565b60008135905061180c816117e6565b92915050565b600080604083850312156118295761182861149a565b5b6000611837858286016116e7565b9250506020611848858286016117fd565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611894826115a5565b810181811067ffffffffffffffff821117156118b3576118b261185c565b5b80604052505050565b60006118c6611490565b90506118d2828261188b565b919050565b600067ffffffffffffffff8211156118f2576118f161185c565b5b6118fb826115a5565b9050602081019050919050565b82818337600083830152505050565b600061192a611925846118d7565b6118bc565b90508281526020810184848401111561194657611945611857565b5b611951848285611908565b509392505050565b600082601f83011261196e5761196d611852565b5b813561197e848260208601611917565b91505092915050565b600080600080608085870312156119a1576119a061149a565b5b60006119af878288016116e7565b94505060206119c0878288016116e7565b93505060406119d187828801611632565b925050606085013567ffffffffffffffff8111156119f2576119f161149f565b5b6119fe87828801611959565b91505092959194509250565b60008060408385031215611a2157611a2061149a565b5b6000611a2f858286016116e7565b9250506020611a40858286016116e7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a9157607f821691505b602082108103611aa457611aa3611a4a565b5b50919050565b6000606082019050611abf60008301866116a6565b611acc602083018561178f565b611ad960408301846116a6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b1b82611611565b9150611b2683611611565b9250828201905080821115611b3e57611b3d611ae1565b5b92915050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611ba0602f8361156a565b9150611bab82611b44565b604082019050919050565b60006020820190508181036000830152611bcf81611b93565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000611bfd82611bd6565b611c078185611be1565b9350611c1781856020860161157b565b611c20816115a5565b840191505092915050565b6000608082019050611c4060008301876116a6565b611c4d60208301866116a6565b611c5a604083018561178f565b8181036060830152611c6c8184611bf2565b905095945050505050565b600081519050611c86816114d0565b92915050565b600060208284031215611ca257611ca161149a565b5b6000611cb084828501611c77565b91505092915050565b6000604082019050611cce60008301856116a6565b611cdb602083018461178f565b939250505056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122085e5177801ddcf67d80caabd99479d8b50eb76c9758d8919c31c168f374b9b7764736f6c634300081b0033";

type BasicNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicNft__factory extends ContractFactory {
  constructor(...args: BasicNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BasicNft & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BasicNft__factory {
    return super.connect(runner) as BasicNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicNftInterface {
    return new Interface(_abi) as BasicNftInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BasicNft {
    return new Contract(address, _abi, runner) as unknown as BasicNft;
  }
}
